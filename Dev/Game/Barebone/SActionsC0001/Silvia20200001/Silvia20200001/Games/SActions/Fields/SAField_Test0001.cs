using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Charlotte.Commons;
using Charlotte.Drawings;
using Charlotte.GameCommons;
using Charlotte.Games.SActions.Enemies;

namespace Charlotte.Games.SActions.Fields
{
	public class SAField_Test0001 : SAField
	{
		#region Resource

		private static readonly string RES_MAPS = @"

・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・＠＠＠・・・・・・・・
・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠・・＠＠＠＠＠・・・・・・・＠＠＠＠・・＠・・・・・・・
・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・＠＠＠＠・・・・＠＠＠＠＠・・・・＠・・・・・・
・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・＠＠＠＠＠＠＠＠＠・＠＠＠・・・・・＠・・・・・
・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・
・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・
・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・
・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠・・＠＠＠・・・・・・＠・・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠・・・・・・・・・・・＠・・・・・・・・・・・・・・＠・＠・＠・＠・・＠・＠・・・・・・・＠・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠・・・・・・・・・・・＠＠・・・・・・・・・・・・・・＠＠＠＠＠＠＠・・＠＠＠・・・・・・・＠・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・＠＠
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・＠＠＠
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・＠＠＠＠
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・・・・・・・・・・・・・・・・＠＠・・＠＠・・・・・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・＠＠・・＠＠・・・＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠・・・・＠＠・・・・・・・・・・・・・・・・・・・・６・
・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠
・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・・・＠
・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠・・・・・・・・・・・・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・＠
・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠・・・・５・・・・・・・・・・・・＠＠＠・・＠＠＠・・＠＠＠・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・＠
・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・＠・＠・・＠・＠・・＠・＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠
・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・＠＠＠・・＠＠＠・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠
・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・＠・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠
・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠

/

＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・＠・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・８・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・＠・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・＠・・・・＠＠＠＠＠・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・＠＠＠・・・＠・・・＠・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・＠・＠＠＠＠＠・・・＠・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・＠＠＠・・・＠・・・＠・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・＠・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・・＠
＠・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠・・・＠
＠・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・＠・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・＠・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠・・・＠
＠・・・・・・・・・・・・・・・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・＠
＠・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・＠・＠・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・＠
＠・・・・・・・・・・・・・・・・・・・＠＠＠＠＠・・・・・・・・・・・・・・・・・・・＠・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・＠・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・＠
＠・・・・・・・・・・・・・＠＠＠＠・・・＠＠・・＠＠・・＠＠・・＠＠・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・＠＠・・＠＠・・＠＠・・＠＠・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠＠・・・・・・・・＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠
・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠
・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠
・４・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・６・
＠＠＠・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・＠＠＠
＠＠・・・・・＠＠・・・・・・・・・・＠＠・・＠＠・・＠＠・・＠＠・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠
＠＠・・・・・＠＠・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠
＠・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・＠＠・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・＠
＠・・・・・・＠＠・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・＠
＠・・・・・・＠＠・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・＠＠
＠・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・＠＠
＠・・・・・・・・・・・・＠＠・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・＠＠
＠・・・・・・・・・・・・＠＠・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・＠＠
＠・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・＠＠
＠・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・＠＠＠
＠・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・＠＠＠
＠・・・・・・・・・・・・・・・・＠＠・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・＠＠＠
＠・・・・・・・・・・・・・・・・＠＠・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・＠＠＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・＠＠＠
＠＠・・・・・・・・・・＠＠・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・＠＠＠＠
＠＠・・・・・・・・・・＠＠・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠・・・・・・・・＠＠＠＠
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠・・・・・・・・・＠＠＠＠
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠・・・・・・・・・＠＠＠＠
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠・・・・・・・・・・＠＠＠＠
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠・・・・・・・・・＠＠＠＠＠
＠＠・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・＠＠＠＠＠＠・・・・・・・・・＠＠＠＠＠
＠＠・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・＠＠＠＠＠＠・・・・・・・・・＠＠＠＠＠
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・・・・・・・・・＠＠＠＠
＠＠・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・＠＠＠・・・・・・・・・・・・・＠＠
＠＠＠・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・＠＠＠・・・・・・・・・・・・・＠＠
＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・＠＠
＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠・・・・・・・・＠＠・・・・・＠＠
＠＠＠＠・・・・・・・・・・＠＠・・・・・・・・・・＠＠＠＠＠・・・・・・・・・＠＠＠＠・・・・＠＠
＠＠＠＠・・・・・・・・・・＠＠・・・・・・・・・・＠＠＠・・・・・・・・・・＠＠＠＠＠＠＠・・＠＠
＠＠＠＠＠・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠・・＠＠
＠＠＠＠＠＠・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠・・・・・＠
＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠・・・・・＠
＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・２・・＠
＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・＠

/

＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・
＠＠・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・＠＠＠＠＠＠・・・・＠＠・・・・・・・・・・・＠＠＠＠・・・・＠＠＠＠・・・・＠＠＠＠・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠
・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠・＠・・・＠＠＠＠＠＠・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠・・・・・・・・＠・・・・＠＠＠＠＠＠・・・・
・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠・・＠＠＠・・・＠＠＠＠・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠・・・・・＠・・・・・＠＠＠＠＠＠・・・・
・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・＠・・・・・・＠＠＠＠＠＠・・・・
・４・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠・＠・・・・・・・＠＠＠＠＠＠・・・・
＠＠・・・・・・・・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・＠・・・・・・・・＠＠＠＠＠＠・・・・
＠＠＠・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠・・＠＠＠・・・＠＠＠＠＠＠＠＠・・・・・・・・・・＠・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠
＠＠＠＠・・・・・・・・・＠＠＠＠＠＠＠＠＠＠・・＠・＠・・・＠＠＠＠＠＠・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・
＠＠＠＠・・・＠＠・・・・・・・・・・＠＠・・・・＠＠＠・・・＠＠＠＠・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・
＠＠＠＠・・・＠＠・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・
＠＠＠＠＠＠＠＠＠・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・
＠＠＠＠＠＠＠＠＠・・・・・・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・・・＠・・・・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・
＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

/

＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・２・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠

/

＠・・＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・８・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・＠＠＠＠＠＠＠・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・＠＠・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・＠＠＠＠＠＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・＠＠＠・・・＠＠＠＠・・・・・・・＠
＠・・・・・・・・・・・・・＠・・・・・・＠・・・・・・・＠
＠＠＠・・・・・・・・・・・＠・・・・・・＠・・・・・・・＠
＠・・・・・・・・・・・・・＠・・・・・・＠＠＠＠＠＠＠＠＠
＠・・・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・＠・・・・・・・・・・・＠
＠・・＠＠＠・・・・・・・・・・・＠・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・＠・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・＠＠＠＠＠＠＠＠＠＠＠＠＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・＠＠＠＠・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・＠＠＠＠・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・＠＠＠＠・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・＠＠＠＠＠・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・＠＠＠＠・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠＠＠＠＠＠＠・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・・・・・・・・・・・・・・・・・・・・・＠
＠・・・・・・・・＠＠＠＠＠＠＠＠＠＠・・・＠・・・・・＠＠
＠・・・・・・・・＠・・・・・・・・・・・・＠・・・・・＠＠
＠・・・・・・・・＠・・・・・・・・・・・・＠・・・・・＠＠
＠・・・・・・・・＠・・・・・・・・・・・・＠・・・・・＠＠
＠・・・・・・・＠＠・・・・・・・・・・・＠＠・・・・＠＠＠
＠・・・・・・・＠・・・・・・・・・・・＠＠・・・・＠＠＠＠
＠・・・・・・・＠・・・・・・・・・・・＠・・・・・＠＠＠＠
＠・・・・・・・＠・・・・・・・・・・・＠・・・・・＠＠＠＠
＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠＠

";

		#endregion

		public static SAField_Test0001 Create(int index)
		{
			string[] lines = SCommon.TextToLines(SCommon.Tokenize(RES_MAPS, "/")[index].Trim());

			int w = lines[0].Length;
			int h = lines.Length;

			return new SAField_Test0001(w, h, lines, index);
		}

		private class TileInfo
		{
			public bool WallFlag = false;
			public int StartPoint = -1; // -1 == 無効
		}

		private TileInfo[,] Table;
		private int FieldIndex;

		private SAField_Test0001(int w, int h, string[] lines, int index)
			: base(new I2Size(w, h))
		{
			TileInfo[,] table = new TileInfo[w, h];

			for (int x = 0; x < w; x++)
			{
				for (int y = 0; y < h; y++)
				{
					TileInfo tile = new TileInfo();
					char chr = lines[y][x];

					switch (chr)
					{
						case '＠': tile.WallFlag = true; break;
						case '４': tile.StartPoint = 4; break;
						case '６': tile.StartPoint = 6; break;
						case '８': tile.StartPoint = 8; break;
						case '２': tile.StartPoint = 2; break;
						case '５': tile.StartPoint = 5; break;

						default:
							break;
					}
					table[x, y] = tile;
				}
			}
			this.Table = table;
			this.FieldIndex = index;
		}

		public override void Initialize()
		{
			SAGame.I.Player.X = this.W / 2.0;
			SAGame.I.Player.Y = this.H / 2.0;

			for (int x = 0; x < this.Table_W; x++)
			{
				for (int y = 0; y < this.Table_H; y++)
				{
					if (SAGameMaster.I.IntoDirection == this.Table[x, y].StartPoint)
					{
						D2Point startPoint = SACommon.ToFieldPoint(new I2Point(x, y));

						SAGame.I.Player.X = startPoint.X;
						SAGame.I.Player.Y = startPoint.Y;
						SAGame.I.Player.FacingLeft = this.W / 2.0 < startPoint.X;

						goto endOfSetStartPoint;
					}
				}
			}
		endOfSetStartPoint:

			for (int c = 0; c < 10; c++)
			{
				D2Point pt = new D2Point(
					(double)(int)SCommon.CRandom.GetDoubleRange(50.0, SAGame.I.Field.W - 150.0),
					(double)(int)SCommon.CRandom.GetDoubleRange(50.0, SAGame.I.Field.H - 150.0)
					);

				if (DD.GetDistance(pt, new D2Point(SAGame.I.Player.X, SAGame.I.Player.Y)) < 200.0) // ? プレイヤーに近すぎる。
					continue;

				SAGame.I.Enemies.Add(new SAEnemy_Test0001(pt.X, pt.Y));
			}
			Musics.SunBeams.Play();
		}

		public override SAField GetNextField(int direction)
		{
			int index;

			// マップ配置：
			// +---+---+---+
			// |   | 3 |   |
			// +---+---+---+
			// | 0 | 1 | 2 |
			// +---+---+---+
			// |   | 4 |   |
			// +---+---+---+

			switch (this.FieldIndex * 10 + direction)
			{
				case 6: index = 1; break;
				case 14: index = 0; break;
				case 16: index = 2; break;
				case 18: index = 3; break;
				case 12: index = 4; break;
				case 24: index = 1; break;
				case 32: index = 1; break;
				case 48: index = 1; break;

				default:
					throw null; // never
			}
			return SAField_Test0001.Create(index);
		}

		protected override bool P_IsWall(I2Point tilePt)
		{
			return this.Table[tilePt.X, tilePt.Y].WallFlag;
		}

		protected override void P_DrawTile(I2Point tilePt, D2Point drawPt)
		{
			if (this.IsWall(tilePt))
			{
				DD.Draw(Pictures.石壁, drawPt);
			}
		}

		protected override IEnumerable<bool> E_DrawWall()
		{
			const int CELL_W = 50;
			const int CELL_H = 50;

			for (; ; )
			{
				int l = -SAGame.I.Camera.X / 10;
				int t = -SAGame.I.Camera.Y / 10;

				l %= CELL_W * 2;
				t %= CELL_H * 2;

				for (int x = 0; l + x * CELL_W < GameConfig.ScreenSize.W; x++)
				{
					for (int y = 0; t + y * CELL_H < GameConfig.ScreenSize.H; y++)
					{
						D2Point drawPt = new D2Point(
							(double)(l + x * CELL_W + CELL_W / 2),
							(double)(t + y * CELL_H + CELL_H / 2)
							);
						I3Color color;

						if ((x + y) % 2 == 0)
							color = new I3Color(16, 48, 16);
						else
							color = new I3Color(24, 64, 24);

						DD.SetBright(color.ToD3Color());
						DD.SetSize(new I2Size(CELL_W, CELL_H).ToD2Size());
						DD.Draw(Pictures.WhiteBox, drawPt);
					}
				}
				yield return true;
			}
		}
	}
}
